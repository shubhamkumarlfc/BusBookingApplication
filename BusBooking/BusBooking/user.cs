//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusBooking
{
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class user
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public user()
        {
            this.transactions = new HashSet<transaction>();
        }
        public int user_id { get; set; }
        // Inputting First Name 
        [Required(ErrorMessage = "Please Enter FirstName ")]
        [Display(Name = "First Name")]
        [RegularExpression("^(([a-zA-Z]+\\s?)([A-Za-z]+)?$)", ErrorMessage = "Please Enter Correct FirstName ")]
        [StringLength(50, ErrorMessage = "name should be Max length of 50")]
        public string firstname { get; set; }

        // Inputting Last Name 
        [Required(ErrorMessage = "Please Enter LastName ")]
        [Display(Name = "Last Name")]
        [RegularExpression("^(([a-zA-Z]+\\s?)([A-Za-z]+)?$)", ErrorMessage = "Please Enter Correct LastName ")]
        [StringLength(50, ErrorMessage = "name should be Max length of 50")]
        public string lastname { get; set; }

        // Inputting Email Address
        [Required(ErrorMessage = "Please Enter Email Address")]
        [Display(Name = "Email")]
        [RegularExpression("^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$", ErrorMessage = "Please Enter Correct Email Address")]
        public string email { get; set; }

        // Inputting Phone Number
        [Required(ErrorMessage = "Please enter Phone Number")]
        [Display(Name = "Phone Number")]
        [StringLength(11, ErrorMessage = "Phone Number should be maximum of 10", MinimumLength = 10)]
        [RegularExpression("^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Please Enter Correct Phone Number")]
        public string contact { get; set; }

        // Inputting Apartment Number
        [Required(ErrorMessage = "Please Enter Apartment Number")]
        [Display(Name = "Apt#")]
        [RegularExpression("^[0-9]*$", ErrorMessage = "Please Enter Correct Apartment Number")]
        public string apt_number { get; set; }

        // Inputting Street Number
        [Required(ErrorMessage = "Please Enter Street Number")]
        [Display(Name = "Street#")]
        [RegularExpression("^[0-9]*$", ErrorMessage = "Please Enter Correct Street Number")]
        public string street_number { get; set; }

        // Inputting City
        [Required(ErrorMessage = "Please Enter City")]
        [Display(Name = "City")]
        [RegularExpression("^(([a-zA-Z]+\\s?)([A-Za-z]+)?$)", ErrorMessage = "Please Enter Correct City")]
        public string city { get; set; }

        // Inputting Province/State
        [Required(ErrorMessage = "Please Enter Province/State")]
        [Display(Name = "Province/State")]
        [RegularExpression("^(([a-zA-Z]+\\s?)([A-Za-z]+)?$)", ErrorMessage = "Please Enter Correct Province/State ")]
        public string state { get; set; }

        // Inputting Country
        [Required(ErrorMessage = "Please Enter Country")]
        [Display(Name = "Country")]
        public string country { get; set; }

        // Inputting Postal Code
        [Required(ErrorMessage = "Please Enter Postal Code")]
        [Display(Name = "Postal Code")]
        [RegularExpression("^([0-9]{5}|[A-Z][0-9][A-Z] ?[0-9][A-Z][0-9])$", ErrorMessage = "Please Enter Valid Postal Code")]
        public string postal_Code { get; set; }

        // Inputting Password
        [Required(ErrorMessage = "Please Enter Password")]
        [Display(Name = "Password")]
        [DataType(DataType.Password)]
        public string password { get; set; }

        // Inputting Role 
        [Required(ErrorMessage = "Please Choose a Role")]
        [Display(Name = "Role")]
        public string role { get; set; }

        //required field and checks whether it matches the password with error message if not valid
        [NotMapped]
        [Required(ErrorMessage = "Please Enter Confirm Password")]
        [Display(Name = "Confirm Password")]
        [DataType(DataType.Password)]
        [Compare(nameof(password), ErrorMessage = "Password and confirm Password do not match")]
        public string confirmPassword { get; set; }

        [NotMapped]
        public string loginErrorMessage { get; set; }

        [Display(Name = "Address")]
        public string Address { get { return string.Join(",", apt_number, street_number, city, state, country, postal_Code); } }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<transaction> transactions { get; set; }
    }
}
